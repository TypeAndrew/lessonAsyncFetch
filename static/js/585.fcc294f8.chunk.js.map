{"version":3,"file":"static/js/585.fcc294f8.chunk.js","mappings":"oSAWMA,EAAe,qJAOjB,OAPiB,oCACnBC,IAAM,WACJ,EAAKC,KAAK,YAAY,EACxB,EAAE,EAEFC,MAAQ,WACN,EAAKD,KAAK,YAAY,EACxB,EAAC,mBAPkB,CAASE,KAUjBC,EAAW,IAAIL,ECuE5B,EArFkB,WAChB,IAAMM,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAKtBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAEF,UAATA,EACFP,EAASM,GACS,aAATC,GACTL,EAAYI,EAEhB,EA2BA,OACE,iCACE,SAAC,KAAI,CAACE,GAAG,IAAIC,SAAO,6BAIpB,kBAAMC,UAAU,QAAQC,MAAO,CAAEC,SAAU,KAAOC,SA/BjC,SAAAT,GACnBA,EAAMU,iBAEW,QAAbb,GAKJD,EAAS,IACTE,EAAY,IAEZP,EAASJ,MACTK,EAAS,SAAU,CAAEa,SAAS,EAAMM,MAAO,CAAC,EAAG,EAAG,EAAG,MARnDC,EAAAA,GAAAA,MAAY,wFAShB,EAkB6E,WACvE,gBAAKN,UAAU,OAAM,UACnB,mBAAOA,UAAU,qBAAoB,WACnC,0CACA,kBACEO,KAAK,OACLV,KAAK,QACLD,MAAOP,EACPmB,SAAUf,EACVO,UAAU,uBAKhB,gBAAKA,UAAU,OAAM,UACnB,mBAAOA,UAAU,qBAAoB,WACnC,qCACA,kBACEO,KAAK,OACLV,KAAK,WACLD,MAAOL,EACPiB,SAAUf,EACVO,UAAU,uBAKhB,mBAAQO,KAAK,SAASP,UAAU,kBAAiB,yBAMzD,C","sources":["components/Confetti/Confetti.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\nimport ConfettiComponent from 'react-confetti';\nimport ReactDOM from 'react-dom';\n\nimport EventEmitter from 'events';\n\nconst TIMEOUT = 4_000;\nconst ANIMATION_DURATION = 2_000;\nconst SCROLL_BAR_WIDTH = 20;\n\nclass ConfettiEmmiter extends EventEmitter {\n  run = () => {\n    this.emit('confetti', true);\n  };\n\n  close = () => {\n    this.emit('confetti', false);\n  };\n}\n\nexport const confetti = new ConfettiEmmiter();\n\nexport const Confetti = () => {\n  const [party, setParty] = useState(true);\n  const [size, setSize] = useState({ y: window.innerHeight, x: window.innerWidth - SCROLL_BAR_WIDTH });\n\n  useEffect(() => {\n    const resize = () => setSize({ y: window?.innerHeight, x: window.innerWidth - SCROLL_BAR_WIDTH });\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, []);\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setParty(false);\n    }, ANIMATION_DURATION);\n\n    return () => {\n      clearTimeout(id);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(\n    <ConfettiComponent\n      style={{ position: 'fixed', top: 0, left: 0, zIndex: 100000, width: '100%', pointerEvents: 'none' }}\n      numberOfPieces={party ? 200 : 0}\n      gravity={0.3}\n      onConfettiComplete={c => {\n        setParty(false);\n        c?.reset();\n      }}\n      width={size.x}\n      height={size.y}\n    />,\n    document.body,\n  );\n};\n\nexport const ConfettiContainer = () => {\n  const timeoutId = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    confetti.on('confetti', setIsOpen);\n    return () => {\n      confetti.off('confetti', setIsOpen);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isOpen) {\n      timeoutId.current = setTimeout(() => {\n        confetti.close();\n      }, TIMEOUT);\n    }\n\n    return () => {\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n    };\n  }, [isOpen]);\n\n  return isOpen && <Confetti />;\n};\n","import { useState } from 'react';\n\nimport { useNavigate, Link, Navigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { confetti } from '../../components/Confetti/Confetti';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // ...\n  const isLoggedIn = false;\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (password !== '123') {\n      toast.error('Невірний пароль');\n      return;\n    }\n\n    setEmail('');\n    setPassword('');\n\n    confetti.run();\n    navigate('/posts', { replace: true, state: [1, 2, 3, 4] });\n  };\n\n  //   useEffect(() => {\n  //     if (isLoggedIn) {\n  //       navigate('/');\n  //     }\n  //   }, [isLoggedIn]);\n\n  if (isLoggedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <>\n      <Link to=\"/\" replace>\n        to home page\n      </Link>\n\n      <form className=\"w-100\" style={{ maxWidth: 400 }} onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label d-block\">\n            <p>Email address</p>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              className=\"form-control\"\n            />\n          </label>\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label d-block\">\n            <p>Password</p>\n            <input\n              type=\"text\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              className=\"form-control\"\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["ConfettiEmmiter","run","emit","close","EventEmitter","confetti","navigate","useNavigate","useState","email","setEmail","password","setPassword","handleChange","event","target","value","name","to","replace","className","style","maxWidth","onSubmit","preventDefault","state","toast","type","onChange"],"sourceRoot":""}