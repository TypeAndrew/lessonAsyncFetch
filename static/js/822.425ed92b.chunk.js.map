{"version":3,"file":"static/js/822.425ed92b.chunk.js","mappings":"2RAEaA,EAAS,SAAH,GAAiG,IAAD,IAA1FC,KAAAA,OAAI,MAAG,SAAQ,MAAEC,UAAAA,OAAS,MAAG,cAAa,EAAEC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAaC,GAAK,YAC1G,OAEE,mCAAQL,KAAMA,EAAMC,UAAWK,IAAW,MAAOL,IAAgBI,GAAK,IAAED,SAAUF,GAAaE,EAAS,SACrGF,GACC,iCACE,iBAAMD,UAAU,+BAA+BM,KAAK,SAAS,cAAY,UACzE,iBAAMN,UAAU,OAAM,2BAGxBE,IAIR,ECZaK,EAAa,SAAAC,GACxB,IAAMC,EAAeD,EAAU,IAEzBE,EAAeF,EAAU,IACzBG,EAAgBC,KAAKC,MAAMH,GAAgB,GAC3CI,EAAgBF,KAAKC,MAAMH,EAAe,IAAM,GAEtD,OAXa,WAAc,IAAD,uBAATK,EAAI,yBAAJA,EAAI,gBACrB,OAAOA,EAAKC,KAAK,IACnB,CASSC,CACLC,OAAOJ,GAAeK,SAAS,EAAG,KAClCD,OAAOP,GAAeQ,SAAS,EAAG,KAClCD,OAAOT,GAAcU,SAAS,EAAG,KAErC,ECgCA,EA3CkB,WAChB,IAAMC,GAAMC,EAAAA,EAAAA,QAAO,MACnB,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eAA5BC,EAAI,KAAEC,EAAO,KAWdC,EAAkB,WAClBL,EAAIM,UACNC,cAAcP,EAAIM,SAClBN,EAAIM,QAAU,KAElB,EAQA,OANAE,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLH,GACF,CACF,GAAG,KAGD,iCACE,cAAGzB,UAAU,sBAAqB,SAAEO,EAAWgB,MAE/C,iBAAKvB,UAAU,gCAA+B,WAC5C,SAACF,EAAM,CAACE,UAAU,yBAAyB6B,QAASJ,EAAgB,mBAIpE,SAAC3B,EAAM,CAACE,UAAU,0BAA0B6B,QA/BzB,WAClBT,EAAIM,UACPN,EAAIM,QAAUI,aAAY,WACxBN,GAAQ,SAAAO,GAAI,OAAIA,EAAO,CAAC,IACxBC,QAAQC,IAAI,cACd,GAAG,GAEP,EAwB4E,wBAM9E,C","sources":["components/Button/Button.jsx","helpers/time.js","pages/ExercisesPage/TimerPage/TimerPage.jsx"],"sourcesContent":["import classNames from 'classnames';\n\nexport const Button = ({ type = 'button', className = 'btn-primary', isLoading, children, disabled, ...props }) => {\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button type={type} className={classNames('btn', className)} {...props} disabled={isLoading || disabled}>\n      {isLoading ? (\n        <>\n          <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\" />\n          <span className=\"ms-2\">Loading...</span>\n        </>\n      ) : (\n        children\n      )}\n    </button>\n  );\n};\n","const concat = (...args) => {\n  return args.join(':');\n};\n\nexport const formatTime = seconds => {\n  const milliseconds = seconds % 1000;\n\n  const secondsOfset = seconds / 1000;\n  const secondsPassed = Math.floor(secondsOfset) % 60;\n  const minutesPassed = Math.floor(secondsOfset / 60) % 60;\n\n  return concat(\n    String(minutesPassed).padStart(2, '0'),\n    String(secondsPassed).padStart(2, '0'),\n    String(milliseconds).padStart(3, '0'),\n  );\n};\n","import { useEffect, useState, useRef } from 'react';\n\nimport { Button } from '../../../components/Button/Button';\nimport { formatTime } from '../../../helpers/time';\n\nconst TimerPage = () => {\n  const ref = useRef(null);\n  const [time, setTime] = useState(0);\n\n  const handleStartTimer = () => {\n    if (!ref.current) {\n      ref.current = setInterval(() => {\n        setTime(prev => prev + 1);\n        console.log('setInterval');\n      }, 0);\n    }\n  };\n\n  const handleStopTimer = () => {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      handleStopTimer();\n    };\n  }, []);\n\n  return (\n    <>\n      <p className=\"h1 mb-4 text-center\">{formatTime(time)}</p>\n\n      <div className=\"d-flex justify-content-center\">\n        <Button className=\"btn-danger btn-lg mx-2\" onClick={handleStopTimer}>\n          Stop\n        </Button>\n\n        <Button className=\"btn-primary btn-lg mx-2\" onClick={handleStartTimer}>\n          Start\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default TimerPage;\n"],"names":["Button","type","className","isLoading","children","disabled","props","classNames","role","formatTime","seconds","milliseconds","secondsOfset","secondsPassed","Math","floor","minutesPassed","args","join","concat","String","padStart","ref","useRef","useState","time","setTime","handleStopTimer","current","clearInterval","useEffect","onClick","setInterval","prev","console","log"],"sourceRoot":""}